-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\axi_lite_NCO\axi_lite_nco_pcore_dut.vhd
-- Created: 2014-01-21 14:23:43
-- 
-- Generated by MATLAB 8.3 and HDL Coder 3.4
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: axi_lite_nco_pcore_dut
-- Source Path: axi_lite_nco_pcore/axi_lite_nco_pcore_dut
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY axi_lite_nco_pcore_dut IS
  PORT( wr_NCOinc                         :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        clk                               :   IN    std_logic;  -- ufix1
        clk_enable                        :   IN    std_logic;  -- ufix1
        reset                             :   IN    std_logic;  -- ufix1
        dataInVld                         :   IN    std_logic;  -- ufix1
        wr_debugNCO                       :   IN    std_logic;  -- ufix1
        dataIn_I                          :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        dataIn_Q                          :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        rd_NCOinc                         :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        dataOut_I                         :   OUT   std_logic_vector(15 DOWNTO 0);  -- ufix16
        dataOut_Q                         :   OUT   std_logic_vector(15 DOWNTO 0);  -- ufix16
        dataOutVld                        :   OUT   std_logic;  -- ufix1
        rd_debugNCO                       :   OUT   std_logic  -- ufix1
        );
END axi_lite_nco_pcore_dut;


ARCHITECTURE rtl OF axi_lite_nco_pcore_dut IS

  -- Component Declarations
  COMPONENT axi_lite_NCO
    PORT( wr_NCOinc                       :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          clk                             :   IN    std_logic;  -- ufix1
          clk_enable                      :   IN    std_logic;  -- ufix1
          reset                           :   IN    std_logic;  -- ufix1
          dataInVld                       :   IN    std_logic;  -- ufix1
          wr_debugNCO                     :   IN    std_logic;  -- ufix1
          dataIn_I                        :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          dataIn_Q                        :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          rd_NCOinc                       :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          dataOut_I                       :   OUT   std_logic_vector(15 DOWNTO 0);  -- ufix16
          dataOut_Q                       :   OUT   std_logic_vector(15 DOWNTO 0);  -- ufix16
          dataOutVld                      :   OUT   std_logic;  -- ufix1
          rd_debugNCO                     :   OUT   std_logic  -- ufix1
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : axi_lite_NCO
    USE ENTITY work.axi_lite_NCO(rtl);

  -- Signals
  SIGNAL clk_sig                          : std_logic;  -- ufix1
  SIGNAL clk_enable_sig                   : std_logic;  -- ufix1
  SIGNAL reset_sig                        : std_logic;  -- ufix1
  SIGNAL dataInVld_sig                    : std_logic;  -- ufix1
  SIGNAL wr_debugNCO_sig                  : std_logic;  -- ufix1
  SIGNAL rd_NCOinc_sig                    : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL dataOut_I_sig                    : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL dataOut_Q_sig                    : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL dataOutVld_sig                   : std_logic;  -- ufix1
  SIGNAL rd_debugNCO_sig                  : std_logic;  -- ufix1

BEGIN
  u_axi_lite_NCO : axi_lite_NCO
    PORT MAP( wr_NCOinc => wr_NCOinc,  -- ufix32
              clk => clk_sig,  -- ufix1
              clk_enable => clk_enable_sig,  -- ufix1
              reset => reset_sig,  -- ufix1
              dataInVld => dataInVld_sig,  -- ufix1
              wr_debugNCO => wr_debugNCO_sig,  -- ufix1
              dataIn_I => dataIn_I,  -- ufix16
              dataIn_Q => dataIn_Q,  -- ufix16
              rd_NCOinc => rd_NCOinc_sig,  -- ufix32
              dataOut_I => dataOut_I_sig,  -- ufix16
              dataOut_Q => dataOut_Q_sig,  -- ufix16
              dataOutVld => dataOutVld_sig,  -- ufix1
              rd_debugNCO => rd_debugNCO_sig  -- ufix1
              );

  clk_sig <= clk;

  clk_enable_sig <= clk_enable;

  reset_sig <= reset;

  dataInVld_sig <= dataInVld;

  wr_debugNCO_sig <= wr_debugNCO;

  rd_NCOinc <= rd_NCOinc_sig;

  dataOut_I <= dataOut_I_sig;

  dataOut_Q <= dataOut_Q_sig;

  dataOutVld <= dataOutVld_sig;

  rd_debugNCO <= rd_debugNCO_sig;

END rtl;

