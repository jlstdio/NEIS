-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\axi_lite_NCO\axi_lite_NCO.vhd
-- Created: 2013-11-25 16:43:02
-- 
-- Generated by MATLAB 8.3 and HDL Coder 3.4
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 0.2
-- Target subsystem base rate: 0.2
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: axi_lite_NCO
-- Source Path: axi_lite_NCO
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY axi_lite_NCO IS
  PORT( wr_NCOinc                         : IN  std_logic_vector(31 DOWNTO 0);  -- uint32
        clk                               : IN  std_logic;  -- ufix1
        clk_enable                        : IN  std_logic;  -- ufix1
        reset                             : IN  std_logic;  -- ufix1
        dataInVld                         : IN  std_logic;  -- ufix1
        wr_debugNCO                       : IN  std_logic;  -- ufix1
        dataIn_I                          : IN  std_logic_vector(15 DOWNTO 0);  -- uint16
        dataIn_Q                          : IN  std_logic_vector(15 DOWNTO 0);  -- uint16
        rd_NCOinc                         : OUT std_logic_vector(31 DOWNTO 0);  -- uint32
        dataOut_I                         : OUT std_logic_vector(15 DOWNTO 0);  -- uint16
        dataOut_Q                         : OUT std_logic_vector(15 DOWNTO 0);  -- uint16
        dataOutVld                        : OUT std_logic;  -- ufix1
        rd_debugNCO                       : out std_logic
        );
END axi_lite_NCO;


ARCHITECTURE rtl OF axi_lite_NCO IS

  -- Component Declarations
  COMPONENT SDRNCO IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        dataIn_I                          :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        dataIn_Q                          :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        dataInVld                         :   IN    std_logic;
        phaseInc                          :   IN    std_logic_vector(31 DOWNTO 0);  -- int32
        debugNCO                          :   IN    std_logic;
        dataOut_I                         :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        dataOut_Q                         :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        dataOutVld                        :   OUT   std_logic
        );


  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : SDRNCO
    USE ENTITY work.SDRNCO(rtl);

  -- Signals
  SIGNAL phaseInc_sync1    : std_logic_vector(31 DOWNTO 0);
  SIGNAL phaseInc_final    : std_logic_vector(31 DOWNTO 0);
  SIGNAL debugNCO_sync1    : std_logic;
  SIGNAL debugNCO_final    : std_logic; 



BEGIN
  u_SDRNCO : SDRNCO

    PORT MAP( 
            clk          => clk,
            reset        => reset,
            clk_enable   => clk_enable,
            dataIn_I     => dataIn_I,
            dataIn_Q     => dataIn_Q,
            dataInVld    => dataInVld,
            phaseInc     => phaseInc_final,
            debugNCO     => debugNCO_final,
            dataOut_I    => dataOut_I,
            dataOut_Q    => dataOut_Q,
            dataOutVld   => dataOutVld
              );

rxClkSync_proc: process(clk)
begin
  if clk'event and clk = '1' then
    phaseInc_sync1 <= wr_NCOinc;
    phaseInc_final <= phaseInc_sync1;

    debugNCO_sync1 <= wr_debugNCO;
    debugNCO_final <= debugNCO_sync1;
  end if;
end process;


rd_NCOinc <= wr_NCOinc;

rd_debugNCO <= wr_debugNCO;

END rtl;

