-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\axi_lite_simpleint\axi_lite_simpleint_pcore_dut.vhd
-- Created: 2014-03-09 13:14:47
-- 
-- Generated by MATLAB 8.3 and HDL Coder 3.4
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: axi_lite_simpleint_pcore_dut
-- Source Path: axi_lite_simpleint_pcore/axi_lite_simpleint_pcore_dut
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY axi_lite_simpleint_pcore_dut IS
  PORT( wr_intFactor                      :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
        din_I                             :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        din_Q                             :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
        clk                               :   IN    std_logic;  -- ufix1
        din_vld                           :   IN    std_logic;  -- ufix1
        reset                             :   IN    std_logic;  -- ufix1
        rd_intFactor                      :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
        dout_I                            :   OUT   std_logic_vector(15 DOWNTO 0);  -- ufix16
        dout_Q                            :   OUT   std_logic_vector(15 DOWNTO 0);  -- ufix16
        dout_vld                          :   OUT   std_logic;  -- ufix1
        intFactor                         :   OUT   std_logic_vector(31 DOWNTO 0)  -- ufix32
        );
END axi_lite_simpleint_pcore_dut;


ARCHITECTURE rtl OF axi_lite_simpleint_pcore_dut IS

  -- Component Declarations
  COMPONENT axi_lite_simpleint
    PORT( wr_intFactor                    :   IN    std_logic_vector(31 DOWNTO 0);  -- ufix32
          din_I                           :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          din_Q                           :   IN    std_logic_vector(15 DOWNTO 0);  -- ufix16
          clk                             :   IN    std_logic;  -- ufix1
          din_vld                         :   IN    std_logic;  -- ufix1
          reset                           :   IN    std_logic;  -- ufix1
          rd_intFactor                    :   OUT   std_logic_vector(31 DOWNTO 0);  -- ufix32
          dout_I                          :   OUT   std_logic_vector(15 DOWNTO 0);  -- ufix16
          dout_Q                          :   OUT   std_logic_vector(15 DOWNTO 0);  -- ufix16
          dout_vld                        :   OUT   std_logic;  -- ufix1
          intFactor                       :   OUT   std_logic_vector(31 DOWNTO 0)  -- ufix32
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : axi_lite_simpleint
    USE ENTITY work.axi_lite_simpleint(rtl);

  -- Signals
  SIGNAL clk_sig                          : std_logic;  -- ufix1
  SIGNAL din_vld_sig                      : std_logic;  -- ufix1
  SIGNAL reset_sig                        : std_logic;  -- ufix1
  SIGNAL rd_intFactor_sig                 : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL dout_I_sig                       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL dout_Q_sig                       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL dout_vld_sig                     : std_logic;  -- ufix1
  SIGNAL intFactor_sig                    : std_logic_vector(31 DOWNTO 0);  -- ufix32

BEGIN
  u_axi_lite_simpleint : axi_lite_simpleint
    PORT MAP( wr_intFactor => wr_intFactor,  -- ufix32
              din_I => din_I,  -- ufix16
              din_Q => din_Q,  -- ufix16
              clk => clk_sig,  -- ufix1
              din_vld => din_vld_sig,  -- ufix1
              reset => reset_sig,  -- ufix1
              rd_intFactor => rd_intFactor_sig,  -- ufix32
              dout_I => dout_I_sig,  -- ufix16
              dout_Q => dout_Q_sig,  -- ufix16
              dout_vld => dout_vld_sig,  -- ufix1
              intFactor => intFactor_sig  -- ufix32
              );

  clk_sig <= clk;

  din_vld_sig <= din_vld;

  reset_sig <= reset;

  rd_intFactor <= rd_intFactor_sig;

  dout_I <= dout_I_sig;

  dout_Q <= dout_Q_sig;

  dout_vld <= dout_vld_sig;

  intFactor <= intFactor_sig;

END rtl;

