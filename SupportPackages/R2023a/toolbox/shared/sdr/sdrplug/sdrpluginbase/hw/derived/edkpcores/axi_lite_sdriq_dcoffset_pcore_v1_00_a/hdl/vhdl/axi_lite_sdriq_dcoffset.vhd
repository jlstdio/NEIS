-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\axi_lite_sdriq_dcoffset\axi_lite_sdriq_dcoffset.vhd
-- Created: 2013-08-27 15:04:10
-- 
-- Generated by MATLAB 8.2 and HDL Coder 3.3
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 0.2
-- Target subsystem base rate: 0.2
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: axi_lite_sdriq_dcoffset
-- Source Path: axi_lite_sdriq_dcoffset
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY axi_lite_sdriq_dcoffset IS
  PORT( x_in                    :   IN    std_logic_vector(15 DOWNTO 0);  -- uint16
        y_in                    :   IN    std_logic_vector(15 DOWNTO 0);  -- uint16
        clock                   :   IN    std_logic;  -- ufix1
        reset                   :   IN    std_logic;  -- ufix1
        strobe_in               :   IN    std_logic;  -- ufix1
        wr_dcoffset             :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        wr_IQbal                :   IN    std_logic_vector(31 DOWNTO 0);  -- uint32
        wr_iqbal_dcoffbypass    :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
        x_out                   :   OUT   std_logic_vector(15 DOWNTO 0);  -- uint16
        y_out                   :   OUT   std_logic_vector(15 DOWNTO 0);  -- uint16
        strobe_out              :   OUT   std_logic;  -- ufix1
        rd_dcoffset             :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        rd_IQbal                :   OUT   std_logic_vector(31 DOWNTO 0);  -- uint32
        rd_iqbal_dcoffbypass    :   OUT   std_logic_vector(1 DOWNTO 0)  -- ufix2
        );
END axi_lite_sdriq_dcoffset;


ARCHITECTURE rtl OF axi_lite_sdriq_dcoffset IS

  -- Component Declarations
  COMPONENT SDRIQ_DCOffset IS 
    PORT (
            reset               : IN  std_logic;
            clock               : IN  std_logic;
            iqbalbypass         : IN  std_logic;
            dcoffbypass         : IN  std_logic;
            coeff_I             : IN  std_logic_vector(15 DOWNTO 0);
            coeff_Q             : IN  std_logic_vector(15 DOWNTO 0);
            coeff_dcoffset_I    : IN  std_logic_vector(15 DOWNTO 0);
            coeff_dcoffset_Q    : IN  std_logic_vector(15 DOWNTO 0);
            strobe_in           : IN  std_logic;
            x_in                : IN  std_logic_vector(15 DOWNTO 0);
            y_in                : IN  std_logic_vector(15 DOWNTO 0);
            strobe_out          : OUT std_logic;
            x_out               : OUT std_logic_vector(15 DOWNTO 0);
            y_out               : OUT std_logic_vector(15 DOWNTO 0)
);
    END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : SDRIQ_DCOffset
    USE ENTITY work.SDRIQ_DCOffset(rtl);

  -- Signals
  signal iqbal_dcoffbypass_sync1 : std_logic_vector(1 downto 0);
  signal iqbal_dcoffbypass_sync2 : std_logic_vector(1 downto 0);
  signal iqbal_dcoffbypass_sync3 : std_logic_vector(1 downto 0);
  

BEGIN

-- signal sync
  process(clock)
  begin
  IF clock'event and clock = '1' then
     iqbal_dcoffbypass_sync1 <= wr_iqbal_dcoffbypass;
     iqbal_dcoffbypass_sync2 <= iqbal_dcoffbypass_sync1;
     if iqbal_dcoffbypass_sync2  = iqbal_dcoffbypass_sync1 then
       iqbal_dcoffbypass_sync3  <= iqbal_dcoffbypass_sync2;
     end if;
  end if;
  end process;
  
  u_SDRIQ_DCOffset : SDRIQ_DCOffset
    PORT MAP(   x_in => x_in,  
                y_in => y_in,  
                clock => clock,
                reset => reset,
                strobe_in => strobe_in,
                coeff_dcoffset_I => wr_dcoffset(15 downto 0),
                coeff_dcoffset_Q => wr_dcoffset(31 downto 16),
                coeff_I => wr_IQbal(15 downto 0),  -- uint32
                coeff_Q => wr_IQbal(31 downto 16),
                iqbalbypass => iqbal_dcoffbypass_sync3(0),
                dcoffbypass => iqbal_dcoffbypass_sync3(1),
                x_out => x_out,
                y_out => y_out,
                strobe_out => strobe_out
              );

  rd_dcoffset <= wr_dcoffset;
  rd_IQbal <= wr_IQbal;
  rd_iqbal_dcoffbypass <= wr_iqbal_dcoffbypass;

END rtl;

