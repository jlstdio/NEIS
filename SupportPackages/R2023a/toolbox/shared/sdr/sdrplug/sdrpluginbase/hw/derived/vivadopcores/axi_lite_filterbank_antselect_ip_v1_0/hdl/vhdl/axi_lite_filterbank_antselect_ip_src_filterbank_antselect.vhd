-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\filterbank_antselect_io\axi_lite_filterbank_antselect_ip_src_filterbank_antselect.vhd
-- Created: 2016-05-02 18:40:42
-- 
-- Generated by MATLAB 9.0 and HDL Coder 3.8
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 0.2
-- Target subsystem base rate: 0.2
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: axi_lite_filterbank_antselect_ip_src_filterbank_antselect
-- Source Path: filterbank_antselect
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY axi_lite_filterbank_antselect_ip_src_filterbank_antselect IS
  PORT( wr_TX_BANDSEL                     :   IN    std_logic_vector(2 DOWNTO 0);  -- ufix3
        wr_RX1_BANDSEL                    :   IN    std_logic_vector(2 DOWNTO 0);  -- ufix3
        wr_RX2_BANDSEL                    :   IN    std_logic_vector(2 DOWNTO 0);  -- ufix3
        wr_RX1B_BANDSEL                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
        wr_RX1C_BANDSEL                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
        wr_RX2B_BANDSEL                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
        wr_RX2C_BANDSEL                   :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
        wr_TX_ENABLE1A                    :   IN    std_logic;  -- ufix1
        wr_TX_ENABLE2A                    :   IN    std_logic;  -- ufix1
        wr_TX_ENABLE1B                    :   IN    std_logic;  -- ufix1
        wr_TX_ENABLE2B                    :   IN    std_logic;  -- ufix1
        wr_VCTXRX1_V1                     :   IN    std_logic;  -- ufix1
        wr_VCTXRX1_V2                     :   IN    std_logic;  -- ufix1
        wr_VCTXRX2_V1                     :   IN    std_logic;  -- ufix1
        wr_VCTXRX2_V2                     :   IN    std_logic;  -- ufix1
        wr_VCRX1_V1                       :   IN    std_logic;  -- ufix1
        wr_VCRX1_V2                       :   IN    std_logic;  -- ufix1
        wr_VCRX2_V1                       :   IN    std_logic;  -- ufix1
        wr_VCRX2_V2                       :   IN    std_logic;  -- ufix1
        TX_BANDSEL                        :   OUT   std_logic_vector(2 DOWNTO 0);  -- ufix3
        RX1_BANDSEL                       :   OUT   std_logic_vector(2 DOWNTO 0);  -- ufix3
        RX2_BANDSEL                       :   OUT   std_logic_vector(2 DOWNTO 0);  -- ufix3
        RX1B_BANDSEL                      :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        RX1C_BANDSEL                      :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        RX2B_BANDSEL                      :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        RX2C_BANDSEL                      :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        TX_ENABLE1A                       :   OUT   std_logic;  -- ufix1
        TX_ENABLE2A                       :   OUT   std_logic;  -- ufix1
        TX_ENABLE1B                       :   OUT   std_logic;  -- ufix1
        TX_ENABLE2B                       :   OUT   std_logic;  -- ufix1
        VCTXRX1_V1                        :   OUT   std_logic;  -- ufix1
        VCTXRX1_V2                        :   OUT   std_logic;  -- ufix1
        VCTXRX2_V1                        :   OUT   std_logic;  -- ufix1
        VCTXRX2_V2                        :   OUT   std_logic;  -- ufix1
        VCRX1_V1                          :   OUT   std_logic;  -- ufix1
        VCRX1_V2                          :   OUT   std_logic;  -- ufix1
        VCRX2_V1                          :   OUT   std_logic;  -- ufix1
        VCRX2_V2                          :   OUT   std_logic;  -- ufix1
        rd_TX_BANDSEL                     :   OUT   std_logic_vector(2 DOWNTO 0);  -- ufix3
        rd_RX1_BANDSEL                    :   OUT   std_logic_vector(2 DOWNTO 0);  -- ufix3
        rd_RX2_BANDSEL                    :   OUT   std_logic_vector(2 DOWNTO 0);  -- ufix3
        rd_RX1B_BANDSEL                   :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        rd_RX1C_BANDSEL                   :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        rd_RX2B_BANDSEL                   :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        rd_RX2C_BANDSEL                   :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
        rd_TX_ENABLE1A                    :   OUT   std_logic;  -- ufix1
        rd_TX_ENABLE2A                    :   OUT   std_logic;  -- ufix1
        rd_TX_ENABLE1B                    :   OUT   std_logic;  -- ufix1
        rd_TX_ENABLE2B                    :   OUT   std_logic;  -- ufix1
        rd_VCTXRX1_V1                     :   OUT   std_logic;  -- ufix1
        rd_VCTXRX1_V2                     :   OUT   std_logic;  -- ufix1
        rd_VCTXRX2_V1                     :   OUT   std_logic;  -- ufix1
        rd_VCTXRX2_V2                     :   OUT   std_logic;  -- ufix1
        rd_VCRX1_V1                       :   OUT   std_logic;  -- ufix1
        rd_VCRX1_V2                       :   OUT   std_logic;  -- ufix1
        rd_VCRX2_V1                       :   OUT   std_logic;  -- ufix1
        rd_VCRX2_V2                       :   OUT   std_logic  -- ufix1
        );
END axi_lite_filterbank_antselect_ip_src_filterbank_antselect;


ARCHITECTURE rtl OF axi_lite_filterbank_antselect_ip_src_filterbank_antselect IS

BEGIN
  TX_BANDSEL <= wr_TX_BANDSEL;

  RX1_BANDSEL <= wr_RX1_BANDSEL;

  RX2_BANDSEL <= wr_RX2_BANDSEL;

  RX1B_BANDSEL <= wr_RX1B_BANDSEL;

  RX1C_BANDSEL <= wr_RX1C_BANDSEL;

  RX2B_BANDSEL <= wr_RX2B_BANDSEL;

  RX2C_BANDSEL <= wr_RX2C_BANDSEL;

  TX_ENABLE1A <= wr_TX_ENABLE1A;

  TX_ENABLE2A <= wr_TX_ENABLE2A;

  TX_ENABLE1B <= wr_TX_ENABLE1B;

  TX_ENABLE2B <= wr_TX_ENABLE2B;

  VCTXRX1_V1 <= wr_VCTXRX1_V1;

  VCTXRX1_V2 <= wr_VCTXRX1_V2;

  VCTXRX2_V1 <= wr_VCTXRX2_V1;

  VCTXRX2_V2 <= wr_VCTXRX2_V2;

  VCRX1_V1 <= wr_VCRX1_V1;

  VCRX1_V2 <= wr_VCRX1_V2;

  VCRX2_V1 <= wr_VCRX2_V1;

  VCRX2_V2 <= wr_VCRX2_V2;

  rd_TX_BANDSEL <= wr_TX_BANDSEL;

  rd_RX1_BANDSEL <= wr_RX1_BANDSEL;

  rd_RX2_BANDSEL <= wr_RX2_BANDSEL;

  rd_RX1B_BANDSEL <= wr_RX1B_BANDSEL;

  rd_RX1C_BANDSEL <= wr_RX1C_BANDSEL;

  rd_RX2B_BANDSEL <= wr_RX2B_BANDSEL;

  rd_RX2C_BANDSEL <= wr_RX2C_BANDSEL;

  rd_TX_ENABLE1A <= wr_TX_ENABLE1A;

  rd_TX_ENABLE2A <= wr_TX_ENABLE2A;

  rd_TX_ENABLE1B <= wr_TX_ENABLE1B;

  rd_TX_ENABLE2B <= wr_TX_ENABLE2B;

  rd_VCTXRX1_V1 <= wr_VCTXRX1_V1;

  rd_VCTXRX1_V2 <= wr_VCTXRX1_V2;

  rd_VCTXRX2_V1 <= wr_VCTXRX2_V1;

  rd_VCTXRX2_V2 <= wr_VCTXRX2_V2;

  rd_VCRX1_V1 <= wr_VCRX1_V1;

  rd_VCRX1_V2 <= wr_VCRX1_V2;

  rd_VCRX2_V1 <= wr_VCRX2_V1;

  rd_VCRX2_V2 <= wr_VCRX2_V2;

END rtl;

