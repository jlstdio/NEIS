-- -------------------------------------------------------------
-- 
-- File Name: UnitDelayDUT.vhd
-- Created: 2014-08-11 14:47:35
-- 
-- Generated by MATLAB 8.4 and HDL Coder 3.5
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 0.2
-- Target subsystem base rate: 0.2
-- 
-- 
-- Clock Enable  Sample Time
-- -------------------------------------------------------------
-- ce_out        0.2
-- -------------------------------------------------------------
-- 
-- 
-- Output Signal                 Clock Enable  Sample Time
-- -------------------------------------------------------------
-- dut_ch1_out_re                ce_out        0.2
-- dut_ch1_out_im                ce_out        0.2
-- dut_ch2_out_re                ce_out        0.2
-- dut_ch2_out_im                ce_out        0.2
-- -------------------------------------------------------------
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY UnitDelayDUT IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        clk_enable                        :   IN    std_logic;
        dut_ch1_in_re                     :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
        dut_ch1_in_im                     :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
        dut_ch2_in_re                     :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
        dut_ch2_in_im                     :   IN    std_logic_vector(15 DOWNTO 0);  -- int16
        ce_out                            :   OUT   std_logic;
        dut_ch1_out_re                    :   OUT   std_logic_vector(15 DOWNTO 0);  -- int16
        dut_ch1_out_im                    :   OUT   std_logic_vector(15 DOWNTO 0);  -- int16
        dut_ch2_out_re                    :   OUT   std_logic_vector(15 DOWNTO 0);  -- int16
        dut_ch2_out_im                    :   OUT   std_logic_vector(15 DOWNTO 0)  -- int16
        );
END UnitDelayDUT;


ARCHITECTURE rtl OF UnitDelayDUT IS

  -- Signals
  SIGNAL enb                              : std_logic;
  SIGNAL dut_ch1_in_re_signed             : signed(15 DOWNTO 0);  -- int16
  SIGNAL dut_ch1_in_im_signed             : signed(15 DOWNTO 0);  -- int16
  SIGNAL Unit_Delay_out1_re               : signed(15 DOWNTO 0);  -- int16
  SIGNAL Unit_Delay_out1_im               : signed(15 DOWNTO 0);  -- int16
  SIGNAL dut_ch2_in_re_signed             : signed(15 DOWNTO 0);  -- int16
  SIGNAL dut_ch2_in_im_signed             : signed(15 DOWNTO 0);  -- int16
  SIGNAL Unit_Delay1_out1_re              : signed(15 DOWNTO 0);  -- int16
  SIGNAL Unit_Delay1_out1_im              : signed(15 DOWNTO 0);  -- int16

BEGIN
  dut_ch1_in_re_signed <= signed(dut_ch1_in_re);

  dut_ch1_in_im_signed <= signed(dut_ch1_in_im);

  enb <= clk_enable;

  Unit_Delay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Unit_Delay_out1_re <= to_signed(16#0000#, 16);
        Unit_Delay_out1_im <= to_signed(16#0000#, 16);
      ELSIF enb = '1' THEN
        Unit_Delay_out1_re <= dut_ch1_in_re_signed;
        Unit_Delay_out1_im <= dut_ch1_in_im_signed;
      END IF;
    END IF;
  END PROCESS Unit_Delay_process;

  dut_ch1_out_re <= std_logic_vector(Unit_Delay_out1_re);

  dut_ch1_out_im <= std_logic_vector(Unit_Delay_out1_im);

  dut_ch2_in_re_signed <= signed(dut_ch2_in_re);

  dut_ch2_in_im_signed <= signed(dut_ch2_in_im);

  Unit_Delay1_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        Unit_Delay1_out1_re <= to_signed(16#0000#, 16);
        Unit_Delay1_out1_im <= to_signed(16#0000#, 16);
      ELSIF enb = '1' THEN
        Unit_Delay1_out1_re <= dut_ch2_in_re_signed;
        Unit_Delay1_out1_im <= dut_ch2_in_im_signed;
      END IF;
    END IF;
  END PROCESS Unit_Delay1_process;

  dut_ch2_out_re <= std_logic_vector(Unit_Delay1_out1_re);

  dut_ch2_out_im <= std_logic_vector(Unit_Delay1_out1_im);

  ce_out <= clk_enable;

END rtl;

